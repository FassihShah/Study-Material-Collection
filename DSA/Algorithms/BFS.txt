Array<int> breadthFirstSearch()
{
	Array<int> result(vertices);
	Array<bool> visited(vertices);
	for (int i = 0; i < vertices; i++)   /// At start, no vertex is visited
		visited[i] = false;

	for (int i = 0; i < vertices; i++)   /// For disconnected vertices
	{
		if (!visited[i])
		{
			queue<int> q;
			q.push(i);
			visited[i] = true;
			while (!q.empty())
			{
				int top = q.front();
				q.pop();
				result.pushBack(top);
				for (int j = 0; j < graph[top].getSize(); j++)
				{
					if (!visited[graph[top][j]])
					{
						q.push(graph[top][j]);
						visited[graph[top][j]] = true;
					}
				}
			}
		}
	}
	return result;
}